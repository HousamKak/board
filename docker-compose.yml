version: '3.8'

services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-your-production-secret-key}
      - DATABASE_PATH=/app/data/database.sqlite
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGIN=*
      - HELMET_ENABLED=true
      - COMPRESSION_ENABLED=true
      - COMPRESSION_LEVEL=6
      - LOG_LEVEL=info
      - LOG_FILE_PATH=/app/logs/app.log
    volumes:
      - sqlite-data:/app/data
      - app-logs:/app/logs
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3

  # Optional: Add nginx for reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - app
    networks:
      - app-network

  # Optional: Add certbot for SSL
  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nginx

volumes:
  sqlite-data:
  app-logs:
  certbot-etc:
  certbot-var:

networks:
  app-network:
    driver: bridge